[
  {
    "set": "auto-set",
    "name": "ARGV",
    "onlyGAWK": false,
    "desc": "The command-line arguments available to awk programs are stored in\nan array called ARGV.  ARGC is the number of command-line\narguments present.  See Other Arguments.\nUnlike most awk arrays,\nARGV is indexed from 0 to ARGC - 1.\nIn the following example:\n"
  },
  {
    "set": "auto-set",
    "name": "ARGC",
    "onlyGAWK": false,
    "desc": "The command-line arguments available to awk programs are stored in\nan array called ARGV.  ARGC is the number of command-line\narguments present.  See Other Arguments.\nUnlike most awk arrays,\nARGV is indexed from 0 to ARGC - 1.\nIn the following example:\n"
  },
  {
    "set": "auto-set",
    "name": "ARGIND",
    "onlyGAWK": true,
    "desc": "The index in ARGV of the current file being processed.\nEvery time gawk opens a new data file for processing, it sets\nARGIND to the index in ARGV of the file name.\nWhen gawk is processing the input files,\n‘FILENAME == ARGV[ARGIND]’ is always true.\n"
  },
  {
    "set": "auto-set",
    "name": "ENVIRON",
    "onlyGAWK": false,
    "desc": "An associative array containing the values of the environment.  The array\nindices are the environment variable names; the elements are the values of\nthe particular environment variables.  For example,\nENVIRON[\"HOME\"] might be \"/home/arnold\".  Changing this array\ndoes not affect the environment passed on to any programs that\nawk may spawn via redirection or the system() function.\n(In a future version of gawk, it may do so.)\n"
  },
  {
    "set": "auto-set",
    "name": "ERRNO",
    "onlyGAWK": true,
    "desc": "If a system error occurs during a redirection for getline, during\na read for getline, or during a close() operation, then\nERRNO contains a string describing the error.\n"
  },
  {
    "set": "auto-set",
    "name": "FILENAME",
    "onlyGAWK": false,
    "desc": "The name of the current input file.  When no data files are listed\non the command line, awk reads from the standard input and\nFILENAME is set to \"-\".  FILENAME changes each\ntime a new file is read (see Reading Files).  Inside a BEGIN\nrule, the value of FILENAME is \"\", because there are no input\nfiles being processed yet.38 (d.c.) Note, though,\nthat using getline (see Getline) inside a BEGIN rule\ncan give FILENAME a value.\n"
  },
  {
    "set": "auto-set",
    "name": "FNR",
    "onlyGAWK": false,
    "desc": "The current record number in the current file.  awk increments\nFNR each time it reads a new record (see Records).\nawk resets FNR to zero each time it starts a new\ninput file.\n"
  },
  {
    "set": "auto-set",
    "name": "NF",
    "onlyGAWK": false,
    "desc": "The number of fields in the current input record.\nNF is set each time a new record is read, when a new field is\ncreated, or when $0 changes (see Fields).\n"
  },
  {
    "set": "auto-set",
    "name": "FUNCTAB",
    "onlyGAWK": true,
    "desc": "An array whose indices and corresponding values are the names of all\nthe built-in, user-defined, and extension functions in the program.\n"
  },
  {
    "set": "auto-set",
    "name": "NR",
    "onlyGAWK": false,
    "desc": "The number of input records awk has processed since\nthe beginning of the program’s execution\n(see Records).\nawk increments NR each time it reads a new record.\n"
  },
  {
    "set": "auto-set",
    "name": "PROCINFO",
    "onlyGAWK": true,
    "desc": "The elements of this array provide access to information about the\nrunning awk program.\nThe following elements (listed alphabetically)\nare guaranteed to be available:\n"
  },
  {
    "set": "auto-set",
    "name": "RLENGTH",
    "onlyGAWK": false,
    "desc": "The length of the substring matched by the\nmatch() function\n(see String Functions).\nRLENGTH is set by invoking the match() function.  Its value\nis the length of the matched string, or -1 if no match is found.\n"
  },
  {
    "set": "auto-set",
    "name": "RSTART",
    "onlyGAWK": false,
    "desc": "The start index in characters of the substring that is matched by the\nmatch() function\n(see String Functions).\nRSTART is set by invoking the match() function.  Its value\nis the position of the string where the matched substring starts, or zero\nif no match was found.\n"
  },
  {
    "set": "auto-set",
    "name": "RT",
    "onlyGAWK": true,
    "desc": "The input text that matched the text denoted by RS,\nthe record separator.  It is set every time a record is read.\n"
  },
  {
    "set": "auto-set",
    "name": "SYMTAB",
    "onlyGAWK": true,
    "desc": "An array whose indices are the names of all defined global variables and\narrays in the program.  SYMTAB makes gawk’s symbol table\nvisible to the awk programmer.  It is built as gawk\nparses the program and is complete before the program starts to run.\n"
  },
  {
    "set": "user-modified",
    "name": "BINMODE",
    "onlyGAWK": true,
    "desc": "On non-POSIX systems, this variable specifies use of binary mode\nfor all I/O.  Numeric values of one, two, or three specify that input\nfiles, output files, or all files, respectively, should use binary I/O.\nA numeric value less than zero is treated as zero, and a numeric value\ngreater than three is treated as three.  Alternatively, string values\nof \"r\" or \"w\" specify that input files and output files,\nrespectively, should use binary I/O.  A string value of \"rw\" or\n\"wr\" indicates that all files should use binary I/O.  Any other\nstring value is treated the same as \"rw\", but causes gawk\nto generate a warning message.  BINMODE is described in more\ndetail in PC Using.  mawk (see Other Versions)\nalso supports this variable, but only using numeric values.\n"
  },
  {
    "set": "user-modified",
    "name": "CONVFMT",
    "onlyGAWK": false,
    "desc": "A string that controls the conversion of numbers to\nstrings (see Conversion).\nIt works by being passed, in effect, as the first argument to the\nsprintf() function\n(see String Functions).\nIts default value is \"%.6g\".\nCONVFMT was introduced by the POSIX standard.\n"
  },
  {
    "set": "user-modified",
    "name": "FIELDWIDTHS",
    "onlyGAWK": true,
    "desc": "A space-separated list of columns that tells gawk\nhow to split input with fixed columnar boundaries.\nAssigning a value to FIELDWIDTHS\noverrides the use of FS and FPAT for field splitting.\nSee Constant Size for more information.\n"
  },
  {
    "set": "user-modified",
    "name": "FPAT",
    "onlyGAWK": true,
    "desc": "A regular expression (as a string) that tells gawk\nto create the fields based on text that matches the regular expression.\nAssigning a value to FPAT\noverrides the use of FS and FIELDWIDTHS for field splitting.\nSee Splitting By Content for more information.\n"
  },
  {
    "set": "user-modified",
    "name": "FS",
    "onlyGAWK": false,
    "desc": "The input field separator (see Field Separators).\nThe value is a single-character string or a multicharacter regular\nexpression that matches the separations between fields in an input\nrecord.  If the value is the null string (\"\"), then each\ncharacter in the record becomes a separate field.\n(This behavior is a gawk extension. POSIX awk does not\nspecify the behavior when FS is the null string.\nNonetheless, some other versions of awk also treat\n\"\" specially.)\n"
  },
  {
    "set": "user-modified",
    "name": "IGNORECASE",
    "onlyGAWK": true,
    "desc": "If IGNORECASE is nonzero or non-null, then all string comparisons\nand all regular expression matching are case-independent.\nThis applies to\nregexp matching with ‘~’ and ‘!~’,\nthe gensub(), gsub(), index(), match(),\npatsplit(), split(), and sub() functions,\nrecord termination with RS, and field splitting with\nFS and FPAT.\nHowever, the value of IGNORECASE does not affect array subscripting\nand it does not affect field splitting when using a single-character\nfield separator.\nSee Case-sensitivity.\n"
  },
  {
    "set": "user-modified",
    "name": "LINT",
    "onlyGAWK": true,
    "desc": "When this variable is true (nonzero or non-null), gawk\nbehaves as if the --lint command-line option is in effect\n(see Options).\nWith a value of \"fatal\", lint warnings become fatal errors.\nWith a value of \"invalid\", only warnings about things that are\nactually invalid are issued. (This is not fully implemented yet.)\nAny other true value prints nonfatal warnings.\nAssigning a false value to LINT turns off the lint warnings.\n"
  },
  {
    "set": "user-modified",
    "name": "OFMT",
    "onlyGAWK": false,
    "desc": "A string that controls conversion of numbers to\nstrings (see Conversion) for\nprinting with the print statement.  It works by being passed\nas the first argument to the sprintf() function\n(see String Functions).\nIts default value is \"%.6g\".  Earlier versions of awk\nused OFMT to specify the format for converting numbers to\nstrings in general expressions; this is now done by CONVFMT.\n"
  },
  {
    "set": "user-modified",
    "name": "OFS",
    "onlyGAWK": false,
    "desc": "The output field separator (see Output Separators).  It is\noutput between the fields printed by a print statement.  Its\ndefault value is \" \", a string consisting of a single space.\n"
  },
  {
    "set": "user-modified",
    "name": "ORS",
    "onlyGAWK": false,
    "desc": "The output record separator.  It is output at the end of every\nprint statement.  Its default value is \"\\n\", the newline\ncharacter.  (See Output Separators.)\n"
  },
  {
    "set": "user-modified",
    "name": "PREC",
    "onlyGAWK": true,
    "desc": "The working precision of arbitrary-precision floating-point numbers,\n53 bits by default (see Setting precision).\n"
  },
  {
    "set": "user-modified",
    "name": "ROUNDMODE",
    "onlyGAWK": true,
    "desc": "The rounding mode to use for arbitrary-precision arithmetic on\nnumbers, by default \"N\" (roundTiesToEven in\nthe IEEE 754 standard; see Setting the rounding mode).\n"
  },
  {
    "set": "user-modified",
    "name": "RS",
    "onlyGAWK": false,
    "desc": "The input record separator.  Its default value is a string\ncontaining a single newline character, which means that an input record\nconsists of a single line of text.\nIt can also be the null string, in which case records are separated by\nruns of blank lines.\nIf it is a regexp, records are separated by\nmatches of the regexp in the input text.\n(See Records.)\n"
  },
  {
    "set": "user-modified",
    "name": "SUBSEP",
    "onlyGAWK": false,
    "desc": "The subscript separator.  It has the default value of\n\"\\034\" and is used to separate the parts of the indices of a\nmultidimensional array.  Thus, the expression ‘foo[\"A\", \"B\"]’\nreally accesses foo[\"A\\034B\"]\n(see Multidimensional).\n"
  },
  {
    "set": "user-modified",
    "name": "TEXTDOMAIN",
    "onlyGAWK": true,
    "desc": "Used for internationalization of programs at the\nawk level.  It sets the default text domain for specially\nmarked string constants in the source text, as well as for the\ndcgettext(), dcngettext(), and bindtextdomain() functions\n(see Internationalization).\nThe default value of TEXTDOMAIN is \"messages\".\n"
  }
]
